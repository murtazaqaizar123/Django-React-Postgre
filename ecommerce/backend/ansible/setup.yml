---
- name: Deploy Django + React + PostgreSQL App
  hosts: localhost
  become: true

  vars:
    project_dir: /var/lib/jenkins/workspace/Django-React-Postgre/ecommerce
    venv_path: "{{ project_dir }}/backend/venv"
    python_path: "{{ venv_path }}/bin/python"
    secret_key: "your-very-secret-key-here"  # Replace this with a secure key or use Jenkins credentials

  tasks:

    - name: Install system dependencies
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - docker.io
          - docker-compose
        state: present
        update_cache: true

    - name: Start and enable Docker service
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Ensure virtual environment exists
      command: python3 -m venv {{ venv_path }}
      args:
        creates: "{{ venv_path }}"

    - name: Upgrade pip in venv
      command: "{{ python_path }} -m pip install --upgrade pip"

    - name: Install Python requirements
      pip:
        requirements: "{{ project_dir }}/backend/requirements.txt"
        virtualenv: "{{ venv_path }}"

    - name: Run Django migrations
      command:
        argv:
          - "{{ python_path }}"
          - manage.py
          - migrate
      args:
        chdir: "{{ project_dir }}/backend"
      environment:
        SECRET_KEY: "{{ secret_key }}"

    # Optional: Collect static files
    - name: Collect static files
      command:
        argv:
          - "{{ python_path }}"
          - manage.py
          - collectstatic
          - --noinput
      args:
        chdir: "{{ project_dir }}/backend"
      environment:
        SECRET_KEY: "{{ secret_key }}"

    # Optional: Build frontend if needed (adjust path if not using React)
    - name: Install frontend dependencies
      command: yarn install
      args:
        chdir: "{{ project_dir }}/frontend"

    - name: Build frontend
      command: yarn build
      args:
        chdir: "{{ project_dir }}/frontend"

