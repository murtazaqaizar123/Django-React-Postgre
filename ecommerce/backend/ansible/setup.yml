---
- name: Full setup for Django + React + PostgreSQL project (No Docker)
  hosts: localhost
  become: true

  vars:
    project_dir: /mnt/c/Users/User/Desktop/Django-React-2022/ecommerce/backend
    backend_dir: "{{ project_dir }}"
    frontend_dir: "{{ backend_dir }}/frontend"
    venv_dir: "{{ backend_dir }}/venv"
    db_name: mydb
    db_user: myuser
    db_password: mypass

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install system packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - postgresql
          - libpq-dev
          - curl
          - build-essential
          - libjpeg-dev
          - zlib1g-dev
          - nginx
        state: present

    - name: Install Node.js (via setup script)
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
      args:
        executable: /bin/bash

    - name: Start and enable PostgreSQL
      systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Create PostgreSQL user manually
      shell: |
        sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='{{ db_user }}'" | grep -q 1 || \
        sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ db_password }}' CREATEDB;"

    - name: Create PostgreSQL database manually
      shell: |
        sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw "{{ db_name }}" || \
        sudo -u postgres createdb -O {{ db_user }} {{ db_name }}

    - name: Create Python virtual environment
      command: python3 -m venv venv
      args:
        chdir: "{{ backend_dir }}"
      when: not lookup('file', venv_dir, errors='ignore')

    - name: Upgrade pip
      command: "{{ venv_dir }}/bin/pip install --upgrade pip"
      args:
        chdir: "{{ backend_dir }}"

    - name: Install Python dependencies
      command: "{{ venv_dir }}/bin/pip install -r requirements.txt"
      args:
        chdir: "{{ backend_dir }}"

    - name: Install Pillow explicitly (required for ImageField)
      command: "{{ venv_dir }}/bin/pip install Pillow"
      args:
        chdir: "{{ backend_dir }}"

    - name: Run Django migrations
      command: "{{ venv_dir }}/bin/python manage.py migrate"
      args:
        chdir: "{{ backend_dir }}"
      environment:
        SECRET_KEY: "your-very-secret-key"
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: "{{ db_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASS: "{{ db_password }}"
        DB_HOST: "localhost"
        DB_PORT: "5432"

    - name: Collect Django static files
      command: "{{ venv_dir }}/bin/python manage.py collectstatic --noinput"
      args:
        chdir: "{{ backend_dir }}"
      environment:
        SECRET_KEY: "your-very-secret-key"

    - name: Install Yarn globally
      npm:
        name: yarn
        global: yes

    - name: Install frontend dependencies
      command: yarn install
      args:
        chdir: "{{ frontend_dir }}"

    - name: Build React frontend
      command: yarn build
      args:
        chdir: "{{ frontend_dir }}"

    - name: Copy Nginx config for project
      copy:
        dest: /etc/nginx/sites-available/ecommerce
        content: |
          server {
              listen 80;
              server_name localhost;

              root /mnt/c/Users/User/Desktop/Django-React-2022/ecommerce/backend/frontend/build;
              index index.html index.htm;

              location / {
                  try_files $uri /index.html;
              }

              location /api/ {
                  proxy_pass http://127.0.0.1:8000/;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }

              location /static/ {
                  alias /mnt/c/Users/User/Desktop/Django-React-2022/ecommerce/backend/staticfiles/;
              }

              location /media/ {
                  alias /mnt/c/Users/User/Desktop/Django-React-2022/ecommerce/backend/media/;
              }
          }

    - name: Enable Nginx config by linking to sites-enabled
      file:
        src: /etc/nginx/sites-available/ecommerce
        dest: /etc/nginx/sites-enabled/ecommerce
        state: link
        force: yes

    - name: Test Nginx configuration
      command: nginx -t

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
