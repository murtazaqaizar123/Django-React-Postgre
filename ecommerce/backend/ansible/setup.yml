- name: Full setup for Django + React + PostgreSQL project (No Docker)
  hosts: localhost
  become: true

  vars:
    project_dir: /var/lib/jenkins/workspace/Django-React-Postgre/ecommerce
    backend_dir: "{{ project_dir }}/backend"
    frontend_dir: "{{ project_dir }}/frontend"
    venv_dir: "{{ backend_dir }}/venv"

    db_name: mydb
    db_user: myuser
    db_password: mypass

  tasks:

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install system packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - postgresql
          - libpq-dev
          - curl
        state: present

    - name: Install Node.js from NodeSource
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
      args:
        executable: /bin/bash

    - name: Enable Corepack and install Yarn
      shell: |
        corepack enable
        corepack prepare yarn@stable --activate
      args:
        executable: /bin/bash

    - name: Start and enable PostgreSQL
      systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Create PostgreSQL user
      become_user: postgres
      shell: psql -c "DO \$\$ BEGIN IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname='{{ db_user }}') THEN CREATE ROLE {{ db_user }} LOGIN PASSWORD '{{ db_password }}'; END IF; END \$\$;"

    - name: Create PostgreSQL database
      become_user: postgres
      postgresql_db:
        name: "{{ db_name }}"
        owner: "{{ db_user }}"
        state: present

    - name: Create Python virtual environment
      command: python3 -m venv venv
      args:
        chdir: "{{ backend_dir }}"
      when: not lookup('file', venv_dir, errors='ignore')

    - name: Upgrade pip
      command: "{{ venv_dir }}/bin/pip install --upgrade pip"
      args:
        chdir: "{{ backend_dir }}"

    - name: Install Python dependencies
      command: "{{ venv_dir }}/bin/pip install -r requirements.txt"
      args:
        chdir: "{{ backend_dir }}"

    - name: Run Django migrations
      command: "{{ venv_dir }}/bin/python manage.py migrate"
      args:
        chdir: "{{ backend_dir }}"
      environment:
        SECRET_KEY: "your-very-secret-key"
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: "{{ db_name }}"
        DB_USER: "{{ db_user }}"
        DB_PASS: "{{ db_password }}"
        DB_HOST: "localhost"
        DB_PORT: "5432"

    - name: Collect Django static files
      command: "{{ venv_dir }}/bin/python manage.py collectstatic --noinput"
      args:
        chdir: "{{ backend_dir }}"
      environment:
        SECRET_KEY: "your-very-secret-key"

    - name: Install frontend dependencies with Yarn
      command: yarn install
      args:
        chdir: "{{ frontend_dir }}"

    - name: Build React frontend
      command: yarn build
      args:
        chdir: "{{ frontend_dir }}"
